warning: unused import: `RpcBlockUpdate`
 --> src/data.rs:3:79
  |
3 | use solana_client::{nonblocking::pubsub_client:: PubsubClient, rpc_response::{RpcBlockUpdate, SlotUpdate}};
  |                                                                               ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `CommitmentLevel`, `pubkey::Pubkey`
 --> src/data.rs:4:18
  |
4 | use solana_sdk::{pubkey::Pubkey,
  |                  ^^^^^^^^^^^^^^
5 |     commitment_config::{CommitmentConfig, CommitmentLevel}
  |                                           ^^^^^^^^^^^^^^^

warning: unused variable: `filter_str`
  --> src/data.rs:35:42
   |
35 |     pub async fn subscribe_blocks(&self, filter_str: &str) -> Result<()> {
   |                                          ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_filter_str`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `helloworld` (lib) generated 3 warnings (run `cargo fix --lib -p helloworld` to apply 2 suggestions)
warning: unused import: `error`
 --> src/subscription.rs:6:18
  |
6 | use serde_json::{error, json};
  |                  ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Signature`, `blake3::Hash`, `clock::Slot`, `self`, `self`
  --> src/subscription.rs:10:5
   |
10 |     blake3::Hash, clock::Slot, commitment_config::{CommitmentConfig, CommitmentLevel}, instruction::CompiledInstruction, message::VersionedMessage::{Legacy, V0}, pubkey::{self, Pubkey}, signature::{self, Signature}
   |     ^^^^^^^^^^^^  ^^^^^^^^^^^                                                                                                                                              ^^^^                       ^^^^  ^^^^^^^^^

warning: unused import: `VecDeque`
  --> src/subscription.rs:13:34
   |
13 | use std::{collections::{HashMap, VecDeque}};
   |                                  ^^^^^^^^

warning: unused imports: `OPENBOOK_MARKET_CACHE`, `OpenbookInfo`
  --> src/subscription.rs:15:87
   |
15 | use crate::raydium_amm::{RAY_AMM_ADDRESS, OPENBOOK_MARKET, parse_raydium_transaction, OpenbookInfo, OPENBOOK_MARKET_CACHE, parse_serum_instruction};
   |                                                                                       ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `RpcBlockUpdate`
  --> src/subscription.rs:19:79
   |
19 | use solana_client::{nonblocking::pubsub_client:: PubsubClient, rpc_response::{RpcBlockUpdate, SlotUpdate}};
   |                                                                               ^^^^^^^^^^^^^^

warning: unused import: `rpc_response`
  --> src/subscription.rs:24:5
   |
24 |     rpc_response,
   |     ^^^^^^^^^^^^

warning: unused import: `raydium_amm::RAY_AMM_ADDRESS`
 --> src/router.rs:2:5
  |
2 |     raydium_amm::RAY_AMM_ADDRESS};
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `futures::TryFutureExt`
 --> src/raydium_amm.rs:2:5
  |
2 | use futures::TryFutureExt;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `solana_sdk::nonce::state::Data`
 --> src/raydium_amm.rs:3:5
  |
3 | use solana_sdk::nonce::state::Data;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `solana_sdk::program_error::ProgramError`
 --> src/raydium_amm.rs:4:5
  |
4 | use solana_sdk::program_error::ProgramError;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `solana_sdk::transaction::Transaction`
 --> src/raydium_amm.rs:5:5
  |
5 | use solana_sdk::transaction::Transaction;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `transaction`
 --> src/raydium_amm.rs:6:26
  |
6 | use solana_sdk::{pubkey, transaction};
  |                          ^^^^^^^^^^^

warning: unused import: `self`
  --> src/raydium_amm.rs:11:23
   |
11 | use crate::strategy::{self, DataSavingStrategy, Step};
   |                       ^^^^

warning: unused imports: `AccountNotFoundError`, `GenAccountError`
  --> src/raydium_amm.rs:13:82
   |
13 | use crate::transaction_executor::{gen_associated_token_account, TOKEN_VAULT_MAP, AccountNotFoundError, KEYPAIR, GenAccountError};
   |                                                                                  ^^^^^^^^^^^^^^^^^^^^           ^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> src/raydium_amm.rs:14:13
   |
14 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `std::fs::File`
 --> src/strategy.rs:3:5
  |
3 | use std::fs::File;
  |     ^^^^^^^^^^^^^

warning: unused import: `std::sync::Mutex`
 --> src/strategy.rs:5:5
  |
5 | use std::sync::Mutex;
  |     ^^^^^^^^^^^^^^^^

warning: unused imports: `AccountInfo`, `Sysvar`, `clock::Clock`, `clock`, `entrypoint::ProgramResult`, `invoke_signed`, `invoke`, `msg`, `next_account_info`, `program_error::ProgramError`, `program_option::COption`, `program_pack::Pack`, `pubkey::Pubkey`, `rent::Rent`, `system_instruction`
  --> src/test_account.rs:2:20
   |
2  |     account_info::{next_account_info, AccountInfo},
   |                    ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^
3  |     clock::Clock,
   |     ^^^^^^^^^^^^
4  |     entrypoint::ProgramResult,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
5  |     msg,
   |     ^^^
6  |     program::{invoke, invoke_signed},
   |               ^^^^^^  ^^^^^^^^^^^^^
7  |     // log::sol_log_compute_units,
8  |     program_error::ProgramError,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
9  |     program_option::COption,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
10 |     program_pack::Pack,
   |     ^^^^^^^^^^^^^^^^^^
11 |     pubkey::Pubkey,
   |     ^^^^^^^^^^^^^^
12 |     rent::Rent,
   |     ^^^^^^^^^^
13 |     system_instruction,
   |     ^^^^^^^^^^^^^^^^^^
14 |     sysvar::{clock, Sysvar},
   |              ^^^^^  ^^^^^^
   |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
  --> src/main.rs:5:1
   |
5  | mod test_account;
   | ^^^^^^^^^^^^^^^^^

warning: unused import: `serum_dex::instruction`
 --> src/transaction_executor.rs:2:5
  |
2 | use serum_dex::instruction;
  |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `solana_sdk::blake3::Hash`
 --> src/transaction_executor.rs:3:5
  |
3 | use solana_sdk::blake3::Hash;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `mint_to`, `transfer`
  --> src/transaction_executor.rs:11:50
   |
11 | use spl_token::instruction::{initialize_account, mint_to, transfer};
   |                                                  ^^^^^^^  ^^^^^^^^

warning: unused imports: `Keypair`, `read_keypair_file`
 --> src/main.rs:9:36
  |
9 | use solana_sdk::signer::{keypair::{read_keypair_file, Keypair}, Signer};
  |                                    ^^^^^^^^^^^^^^^^^  ^^^^^^^

warning: unused import: `hex::FromHex`
  --> src/main.rs:10:5
   |
10 | use hex::FromHex;
   |     ^^^^^^^^^^^^

warning: use of deprecated tuple variant `raydium_amm::instruction::AmmInstruction::PreInitialize`: Not supported yet, please use `Initialize2` instead
   --> src/raydium_amm.rs:393:33
    |
393 |                 AmmInstruction::PreInitialize(_init_arg) => {
    |                                 ^^^^^^^^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: use of deprecated tuple variant `raydium_amm::instruction::AmmInstruction::Initialize`: Not supported yet, please use `Initialize2` instead
   --> src/raydium_amm.rs:397:33
    |
397 |                 AmmInstruction::Initialize(_init1) => {
    |                                 ^^^^^^^^^^

warning: use of deprecated field `raydium_amm::instruction::AmmInstruction::PreInitialize::0`: Not supported yet, please use `Initialize2` instead
   --> src/raydium_amm.rs:393:47
    |
393 |                 AmmInstruction::PreInitialize(_init_arg) => {
    |                                               ^^^^^^^^^

warning: use of deprecated field `raydium_amm::instruction::AmmInstruction::Initialize::0`: Not supported yet, please use `Initialize2` instead
   --> src/raydium_amm.rs:397:44
    |
397 |                 AmmInstruction::Initialize(_init1) => {
    |                                            ^^^^^^

warning: unused variable: `i`
   --> src/raydium_amm.rs:390:10
    |
390 |     for (i, log) in logs.iter().enumerate() {
    |          ^ help: if this is intentional, prefix it with an underscore: `_i`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `init2`
   --> src/raydium_amm.rs:401:45
    |
401 |                 AmmInstruction::Initialize2(init2) => {
    |                                             ^^^^^ help: if this is intentional, prefix it with an underscore: `_init2`

warning: unused variable: `monitor`
   --> src/raydium_amm.rs:404:45
    |
404 |                 AmmInstruction::MonitorStep(monitor) => {
    |                                             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_monitor`

warning: unused variable: `deposit`
   --> src/raydium_amm.rs:408:41
    |
408 |                 AmmInstruction::Deposit(deposit) => {
    |                                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_deposit`

warning: unused variable: `withdraw`
   --> src/raydium_amm.rs:411:42
    |
411 |                 AmmInstruction::Withdraw(withdraw) => {
    |                                          ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_withdraw`

warning: unused variable: `setparams`
   --> src/raydium_amm.rs:418:43
    |
418 |                 AmmInstruction::SetParams(setparams) => {
    |                                           ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_setparams`

warning: unused variable: `withdrawsrm`
   --> src/raydium_amm.rs:426:45
    |
426 |                 AmmInstruction::WithdrawSrm(withdrawsrm) => {
    |                                             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_withdrawsrm`

warning: unused variable: `swap`
   --> src/raydium_amm.rs:430:44
    |
430 |                 AmmInstruction::SwapBaseIn(swap) => {
    |                                            ^^^^ help: if this is intentional, prefix it with an underscore: `_swap`

warning: unused variable: `swap`
   --> src/raydium_amm.rs:433:45
    |
433 |                 AmmInstruction::SwapBaseOut(swap) => {
    |                                             ^^^^ help: if this is intentional, prefix it with an underscore: `_swap`

warning: unused variable: `simulate`
   --> src/raydium_amm.rs:436:46
    |
436 |                 AmmInstruction::SimulateInfo(simulate) => {
    |                                              ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_simulate`

warning: unused variable: `cancel`
   --> src/raydium_amm.rs:440:51
    |
440 |                 AmmInstruction::AdminCancelOrders(cancel) => {
    |                                                   ^^^^^^ help: if this is intentional, prefix it with an underscore: `_cancel`

warning: unused variable: `config_args`
   --> src/raydium_amm.rs:448:53
    |
448 |                 AmmInstruction::UpdateConfigAccount(config_args) => {
    |                                                     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_config_args`

warning: unreachable statement
  --> src/router.rs:21:9
   |
13 | /         loop {
14 | |             tokio::select! {
15 | |                 Some(transaction) = rx.recv() => {
16 | |                     transaction.parse_transaction().await;
...  |
19 | |             }
20 | |         }
   | |_________- any code following this expression is unreachable
21 |           info!("Router task ended");
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement
   |
   = note: `#[warn(unreachable_code)]` on by default
   = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused variable: `address_channels`
  --> src/router.rs:11:17
   |
11 |         let mut address_channels: HashMap<String, mpsc::Sender<Transaction>> = HashMap::new();
   |                 ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address_channels`

warning: variable does not need to be mutable
  --> src/router.rs:11:13
   |
11 |         let mut address_channels: HashMap<String, mpsc::Sender<Transaction>> = HashMap::new();
   |             ----^^^^^^^^^^^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: value assigned to `slot` is never read
   --> src/raydium_amm.rs:104:21
    |
104 |             let mut slot: u64 = *CURRENT_SLOT.read().await;
    |                     ^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: struct `Transaction` is never constructed
  --> src/subscription.rs:29:12
   |
29 | pub struct Transaction {
   |            ^^^^^^^^^^^
   |
   = note: `Transaction` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: method `parse_transaction` is never used
  --> src/subscription.rs:53:18
   |
52 | impl Transaction {
   | ---------------- method in this implementation
53 |     pub async fn parse_transaction(&self) {
   |                  ^^^^^^^^^^^^^^^^^

warning: struct `TransactionFilter` is never constructed
   --> src/subscription.rs:125:8
    |
125 | struct TransactionFilter {
    |        ^^^^^^^^^^^^^^^^^

warning: associated items `new` and `record_transaction` are never used
   --> src/subscription.rs:133:12
    |
132 | impl TransactionFilter {
    | ---------------------- associated items in this implementation
133 |     pub fn new() -> Self {
    |            ^^^
...
142 |     pub fn record_transaction(&mut self, signature: &str) -> bool {
    |            ^^^^^^^^^^^^^^^^^^

warning: function `start_subscription` is never used
   --> src/subscription.rs:160:8
    |
160 | pub fn start_subscription(tx: mpsc::Sender<Transaction>) {
    |        ^^^^^^^^^^^^^^^^^^

warning: function `start_slot_subscription` is never used
   --> src/subscription.rs:262:8
    |
262 | pub fn start_slot_subscription() {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `start_router` is never used
 --> src/router.rs:8:8
  |
8 | pub fn start_router(mut rx: mpsc::Receiver<Transaction>) {
  |        ^^^^^^^^^^^^

warning: constant `RAY_AMM_ADDRESS` is never used
  --> src/raydium_amm.rs:25:11
   |
25 | pub const RAY_AMM_ADDRESS: Pubkey = pubkey!("675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8");
   |           ^^^^^^^^^^^^^^^

warning: constant `RAY_LOG_PREFIX` is never used
  --> src/raydium_amm.rs:26:11
   |
26 | pub const RAY_LOG_PREFIX: &str = "Program log: ray_log: ";
   |           ^^^^^^^^^^^^^^

warning: constant `SOL` is never used
  --> src/raydium_amm.rs:27:11
   |
27 | pub const SOL: Pubkey = pubkey!("So11111111111111111111111111111111111111112");
   |           ^^^

warning: constant `OPENBOOK_MARKET` is never used
  --> src/raydium_amm.rs:28:11
   |
28 | pub const OPENBOOK_MARKET: Pubkey = pubkey!("srmqPvymJeFKQ4zGQed1GFppgkRHL9kaELCbyksJtPX");
   |           ^^^^^^^^^^^^^^^

warning: struct `RaydiumAmmPool` is never constructed
  --> src/raydium_amm.rs:30:12
   |
30 | pub struct RaydiumAmmPool {
   |            ^^^^^^^^^^^^^^
   |
   = note: `RaydiumAmmPool` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated items `new` and `execute_swap` are never used
   --> src/raydium_amm.rs:57:12
    |
56  | impl RaydiumAmmPool {
    | ------------------- associated items in this implementation
57  |     pub fn new(coin_mint: Pubkey,
    |            ^^^
...
127 |     pub async fn execute_swap(&self, amount_in: u64, zero_for_one: bool) -> Result<(), Error> {
    |                  ^^^^^^^^^^^^

warning: field `pools` is never read
   --> src/raydium_amm.rs:193:5
    |
192 | pub struct RaydiumAmmPoolManager {
    |            --------------------- field in this struct
193 |     pools: Mutex<HashMap<Pubkey, Sender<Step>>>,
    |     ^^^^^

warning: methods `add_pool` and `on_step` are never used
   --> src/raydium_amm.rs:224:18
    |
217 | impl RaydiumAmmPoolManager {
    | -------------------------- methods in this implementation
...
224 |     pub async fn add_pool(&self, instruction: &Instruction, ntoken0: u64, ntoken1: u64) {
    |                  ^^^^^^^^
...
273 |     pub async fn on_step(&self, address: &Pubkey, step: Step) {
    |                  ^^^^^^^

warning: function `decode_ray_log` is never used
   --> src/raydium_amm.rs:282:14
    |
282 | pub async fn decode_ray_log(log: &str, instruction: &Instruction) {
    |              ^^^^^^^^^^^^^^

warning: function `parse_raydium_transaction` is never used
   --> src/raydium_amm.rs:387:14
    |
387 | pub async fn parse_raydium_transaction(instructions: &Vec<Instruction>, logs: &Vec<String>) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `parse_serum_instruction` is never used
   --> src/raydium_amm.rs:459:14
    |
459 | pub async fn parse_serum_instruction(data: &[u8], accounts: &[u8], account_keys: &[Pubkey]) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^

warning: method `on_transaction` is never used
  --> src/strategy.rs:20:8
   |
19 | pub trait Strategy: Send {
   |           -------- method in this trait
20 |     fn on_transaction(&mut self, step: &Step, token0_sol: bool) -> bool;
   |        ^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/strategy.rs:30:12
   |
29 | impl DataSavingStrategy {
   | ----------------------- associated function in this implementation
30 |     pub fn new(address: &Pubkey) -> Self {
   |            ^^^

warning: function `generate_amm_associated_account` is never used
  --> src/test_account.rs:20:8
   |
20 | pub fn generate_amm_associated_account() {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: static `RPC_CLIENT` is never used
  --> src/transaction_executor.rs:26:8
   |
26 | static RPC_CLIENT: Lazy<Arc<RpcClient>> = Lazy::new(|| {
   |        ^^^^^^^^^^

warning: function `start_fetch_minimum_balance_loop` is never used
  --> src/transaction_executor.rs:34:8
   |
34 | pub fn start_fetch_minimum_balance_loop() {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `gen_associated_token_account` is never used
  --> src/transaction_executor.rs:74:14
   |
74 | pub async fn gen_associated_token_account(token_mint: &Pubkey, payer: &Pubkey, nwsol: u64) -> Result<(Vec<Instruction>, Pubkey), Error> {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: `helloworld` (bin "helloworld") generated 67 warnings (run `cargo fix --bin "helloworld"` to apply 24 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.69s
     Running `/Users/ekko/Desktop/rust_play/target/debug/helloworld`
[2024-06-10T16:07:47Z INFO  helloworld] Logging is initialized.
[2024-06-10T16:07:47Z INFO  helloworld] Main thread is running...
[2024-06-10T16:07:49Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:07:50Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:07:52Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:07:53Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:07:55Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:07:56Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:07:58Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:07:59Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:01Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:02Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:04Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:06Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:07Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:09Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:10Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:12Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:13Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:14Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:16Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:17Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:19Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:21Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:22Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:24Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:25Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:26Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:28Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:30Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:32Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:33Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
[2024-06-10T16:08:35Z ERROR helloworld::subscription] block subscribe error subscribe failed: Method not found (-32601)
